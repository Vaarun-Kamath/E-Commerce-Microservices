pipeline {
    environment {
        customerImage   = ''
        productImage    = ''
        storeImage      = ''
        databaseImage   = ''
        customermicroservice    = 'varunchandrashekar1/customer-server-593-594-606-607:latest'
        productmicroservice     = 'varunchandrashekar1/products-server-593-594-606-607:latest'
        storemicroservice       = 'varunchandrashekar1/store-server-593-594-606-607:latest'
        databasemicroservice    = 'varunchandrashekar1/database-server-593-594-606-607:latest'

    }

    agent any

    stages {
        stage("testing stageJenkins"){
            steps {
                echo 'jenkins running'
            }
        }
        stage('Checkout Source') {
            steps {
                git branch: 'main', url: 'https://github.com/Vaarun-Kamath/E-Commerce-Microservices.git'
                sh 'echo "git clone completed"'
                sh 'dir'
            }
        }
        stage('client izer') {
            steps {
                dir('client') {
                    script {
                        sh 'dir'
                        sh 'ls'
                        sh 'npm i'
                        // sh 'npm run build'
                    }
                }
            }
        }
        stage('Build Images') {
            steps {
                dir('server/customer') {
                    script {
                        sh 'dir'
                        customerImage = docker.build customermicroservice
                    }
                }
                dir('server/products') {
                    script {
                        sh 'dir'
                        productImage = docker.build productmicroservice
                    }
                }
                dir('server/store') {
                    script {
                        sh 'dir'
                        storeImage = docker.build storemicroservice
                    }
                }
                dir('server/database') {
                    script {
                        sh 'dir'
                        databaseImage = docker.build databasemicroservice
                    }
                }
            }
        }
        stage('Push Images') {
            steps {
                script {
                    docker.withRegistry('', 'varunchandrashekar1') {
                        customerImage.push()
                        productImage.push()
                        storeImage.push()
                        databaseImage.push()
                    }
                }
            }
        }

        stage('List pods') {
            steps{
                sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'
                sh 'chmod u+x ./kubectl'
            }
        }

        // stage('Deploy kubernetes') {
        //     steps {
        //         sh './kubectl apply -f ./k8s'
        //     }
        // }
        
        stage('test') {
            steps {
                echo 'to test'
            }
        }
    }
}
